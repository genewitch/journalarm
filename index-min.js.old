// index-min.js.old
const db = idb.openDatabase('journalarmDB', 1);

const createStore = (name, getFilter) => {
    return idb.createStore(name, (name, value) => {
        if (name === 'timestamp' || name === 'date') {
            return 1;
        }
        return getFilter(value);
    });
};

const alarmsStore = createStore('alarms', (value) => {
    // Alarm must have timestamp and be within last year
    const date = new Date(value.timestamp).getFullYear();
    return date - value.timestamp > 365 * 24 * 60 * 60 * 1000;
});

const journalStore = createStore('journal', (value) => {
    // Journal entry must be within last year
    const date = new Date(value.timestamp).getFullYear();
    return date - value.timestamp > 365 * 24 * 60 * 60 * 1000;
});

// Export for main.js to use
export { createStore, alarmsStore, journalStore };

export async function addAlarm(alarm) {
    return alarmsStore.put(alarm);
}

export async function saveJournal(entry) {
    entry.timestamp = new Date().toISOString();
    return journalStore.put(entry);
}
